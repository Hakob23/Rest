/*
Deployment script for Restaurants

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Restaurants"
:setvar DefaultFilePrefix "Restaurants"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
/*
The column [dbo].[Burgers].[Content] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Burgers])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[HotMeals].[Content] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[HotMeals])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[Pizzas].[Content] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Pizzas])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[Salads].[Content] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Salads])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[Soups].[Content] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Soups])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key d8289266-57ed-480e-938a-36151d47e08a is skipped, element [dbo].[AlcoholDrinks].[Alcohol] (SqlSimpleColumn) will not be renamed to Price';


GO
PRINT N'Rename refactoring operation with key 94644e40-cc45-4384-a5d9-6af6cea4d098 is skipped, element [dbo].[HotMeals].[name] (SqlSimpleColumn) will not be renamed to Name';


GO
PRINT N'Starting rebuilding table [dbo].[Burgers]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Burgers] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (50)  NOT NULL,
    [Price]      FLOAT (53)     NOT NULL,
    [[Content]]] NVARCHAR (MAX) NULL,
    [Restaurant] NVARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Burgers])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Burgers] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Burgers] ([Id], [Name], [Price], [Restaurant])
        SELECT   [Id],
                 [Name],
                 [Price],
                 [Restaurant]
        FROM     [dbo].[Burgers]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Burgers] OFF;
    END

DROP TABLE [dbo].[Burgers];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Burgers]', N'Burgers';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Drinks]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Drinks] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (50) NOT NULL,
    [Price]      FLOAT (53)    NOT NULL,
    [Volume]     FLOAT (53)    NULL,
    [Restaurant] NCHAR (10)    NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Drinks])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Drinks] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Drinks] ([Id], [Name], [Price], [Volume], [Restaurant])
        SELECT   [Id],
                 [Name],
                 [Price],
                 [Volume],
                 [Restaurant]
        FROM     [dbo].[Drinks]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Drinks] OFF;
    END

DROP TABLE [dbo].[Drinks];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Drinks]', N'Drinks';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[HotMeals]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HotMeals] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (50)  NOT NULL,
    [Price]      FLOAT (53)     NOT NULL,
    [[Content]]] NVARCHAR (MAX) NULL,
    [Restaurant] NVARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HotMeals])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HotMeals] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HotMeals] ([Id], [Name], [Price], [Restaurant])
        SELECT   [Id],
                 [Name],
                 [Price],
                 [Restaurant]
        FROM     [dbo].[HotMeals]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HotMeals] OFF;
    END

DROP TABLE [dbo].[HotMeals];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HotMeals]', N'HotMeals';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Pizzas]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Pizzas] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (50)  NOT NULL,
    [Price]      FLOAT (53)     NOT NULL,
    [[Content]]] NVARCHAR (MAX) NULL,
    [Diametr]    INT            NULL,
    [Restaurant] NVARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Pizzas])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Pizzas] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Pizzas] ([Id], [Name], [Price], [Diametr], [Restaurant])
        SELECT   [Id],
                 [Name],
                 [Price],
                 [Diametr],
                 [Restaurant]
        FROM     [dbo].[Pizzas]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Pizzas] OFF;
    END

DROP TABLE [dbo].[Pizzas];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Pizzas]', N'Pizzas';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Salads]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Salads] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (50)  NOT NULL,
    [Price]      FLOAT (53)     NOT NULL,
    [[Content]]] NVARCHAR (MAX) NULL,
    [Restaurant] NVARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Salads])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Salads] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Salads] ([Id], [Name], [Price], [Restaurant])
        SELECT   [Id],
                 [Name],
                 [Price],
                 [Restaurant]
        FROM     [dbo].[Salads]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Salads] OFF;
    END

DROP TABLE [dbo].[Salads];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Salads]', N'Salads';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Soups]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Soups] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (50)  NOT NULL,
    [Price]      FLOAT (53)     NOT NULL,
    [[Content]]] NVARCHAR (MAX) NULL,
    [Restaurant] NVARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Soups])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Soups] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Soups] ([Id], [Name], [Price], [Restaurant])
        SELECT   [Id],
                 [Name],
                 [Price],
                 [Restaurant]
        FROM     [dbo].[Soups]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Soups] OFF;
    END

DROP TABLE [dbo].[Soups];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Soups]', N'Soups';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[AlcoholDrinks]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AlcoholDrinks] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (50) NOT NULL,
    [Price]      FLOAT (53)    NOT NULL,
    [Alcohol]    FLOAT (53)    NOT NULL,
    [Volume]     FLOAT (53)    NOT NULL,
    [Restaurant] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AlcoholDrinks])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlcoholDrinks] ON;
        INSERT INTO [dbo].[tmp_ms_xx_AlcoholDrinks] ([Id], [Name], [Price], [Alcohol], [Volume], [Restaurant])
        SELECT   [Id],
                 [Name],
                 [Price],
                 [Alcohol],
                 [Volume],
                 [Restaurant]
        FROM     [dbo].[AlcoholDrinks]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlcoholDrinks] OFF;
    END

DROP TABLE [dbo].[AlcoholDrinks];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AlcoholDrinks]', N'AlcoholDrinks';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd8289266-57ed-480e-938a-36151d47e08a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d8289266-57ed-480e-938a-36151d47e08a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '94644e40-cc45-4384-a5d9-6af6cea4d098')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('94644e40-cc45-4384-a5d9-6af6cea4d098')

GO

GO
PRINT N'Update complete.';


GO
